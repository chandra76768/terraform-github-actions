name: Terraform Workflow

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.event.pull_request.merged == true
    environment:
      name: production

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Require manual approval before merging
      - name: Check for PR approval
        id: check_approval
        run: |
          gh pr view ${{ github.event.number }} --json reviews -q '.reviews[] | select(.state == "APPROVED")'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Fail if no approval is found
      - name: Ensure PR is approved
        if: ${{ steps.check_approval.outputs.result == '' }}
        run: |
          echo "Error: PR has not been approved."
          exit 1

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
