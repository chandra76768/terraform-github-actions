name: Terraform Workflow

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: AKIA6JQ45APXDWOSURVD
          aws-secret-access-key: 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
          aws-region: us-east-1
          

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: AKIA6JQ45APXDWOSURVD
          aws-secret-access-key: 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
          aws-region: us-east-1
          

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Terraform Apply (manual approval via workflow_dispatch)
      - name: Terraform Apply
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: terraform apply -auto-approve tfplan
